diff --git cmake/catkin_package.cmake cmake/catkin_package.cmake
index fb6b01a..a9b77b3 100644
--- cmake/catkin_package.cmake
+++ cmake/catkin_package.cmake
@@ -270,7 +270,8 @@ function(_catkin_package)
   catkin_filter_libraries_for_build_configuration(libraries ${PKG_CONFIG_LIBRARIES})
   foreach(library ${libraries})
     if(NOT IS_ABSOLUTE ${library})
-      if(NOT ${library} MATCHES "^-l")
+      # Append -l to anything that's not a linker flag
+      if(NOT ${library} MATCHES "^-")
         set(library "-l${library}")
       endif()
     endif()
diff --git cmake/templates/pkgConfig.cmake.in cmake/templates/pkgConfig.cmake.in
index 9c0e46d..f41307d 100644
--- cmake/templates/pkgConfig.cmake.in
+++ cmake/templates/pkgConfig.cmake.in
@@ -123,6 +123,22 @@ foreach(library ${libraries})
     list(APPEND @PROJECT_NAME@_LIBRARIES ${library})
   elseif(${library} MATCHES "^-l")
     list(APPEND @PROJECT_NAME@_LIBRARIES ${library})
+  elseif(${library} MATCHES "^-")
+    # This is a linker flag/option (like -pthread)
+    # There's no standard variable for these, so create an interface library to hold it
+    if(NOT @PROJECT_NAME@_NUM_DUMMY_TARGETS)
+        set(@PROJECT_NAME@_NUM_DUMMY_TARGETS 0)
+    endif()
+    MATH(EXPR VAR "${@PROJECT_NAME@_NUM_DUMMY_TARGETS}+1")
+    add_library("catkin::@PROJECT_NAME@::dummy${@PROJECT_NAME@_NUM_DUMMY_TARGETS}" INTERFACE IMPORTED)
+    if("${CMAKE_VERSION}" VERSION_LESS "3.13.0")
+        set_target_properties(
+          "catkin::@PROJECT_NAME@::dummy${@PROJECT_NAME@_NUM_DUMMY_TARGETS}"
+          PROPERTIES LINK_FLAGS $<TARGET_PROPERTY:LINK_FLAGS> "${library}")
+    else()
+        target_link_options("catkin::@PROJECT_NAME@::dummy${@PROJECT_NAME@_NUM_DUMMY_TARGETS}" INTERFACE "${library}")
+    endif()
+    list(APPEND @PROJECT_NAME@_LIBRARIES "catkin::@PROJECT_NAME@::dummy${@PROJECT_NAME@_NUM_DUMMY_TARGETS}")
   elseif(TARGET ${library})
     list(APPEND @PROJECT_NAME@_LIBRARIES ${library})
   elseif(IS_ABSOLUTE ${library})
